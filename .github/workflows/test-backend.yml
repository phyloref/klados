name: Test Klados reasoner backend

# This workflow tests whether the backend is up and running. It does this by sending it a POST request, then
# checking to see if we get back the expected JSON output.

on:
  schedule:
    # Run this job at 3am and 3pm UTC, which corresponds to 11am and 11pm EDT
    - cron: '0 3,15 * * *'


# Based on https://github.com/marketplace/actions/deploy-to-github-pages
jobs:  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Submit a small Phyx file to the backend server
        id: backendReasonerJob
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://reasoner.phyloref.org/reason"
          method: 'POST'
          httpsCA: ${{ secrets.REASONER_PHYLOREF_ORG_CERTIFICATE_CHAIN_PEM }}
          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded", "X-Hub-Signature": "sha1=b5da475370d024275eb410a58236749c31f957b0"}'
          data: 'jsonldGzipped=H4sIAAAAAAAAA%2B2dbXOjthbHv4qGfZFkxrEBO0%2Fum2a9297MtJtMstsX3e7sKFi21WLEFZDEdyffvUdgYwQC7JjU1V46ndmAHtBfOvpx4Ajr8zfjR4d5IXkKjaExC0M%2FGPZ6j4%2BPXX%2B2cBknky7j0x4cPHX%2FDHrLrL0Hq2t2zdVp5hkdY8wo1GCZ3RP73Or9j3hszLqDk1P79PwEkgMWcYcYw28GjsIZ44Ex%2FPzNmFAehB6eQ4LxM444foCsLk7P%2FYbpeIGN5y8dY0EwN4a2aVsdI6ShK5Lf0SkNsYs48TkJiBfikDIPsQkK2JyIf8MZQY6LxwSNyYR6VKQHiHroLWfOLEK2afbFoch3s1RMOPEcgt4%2FOTPsTQk6hISnIzRhfI5DaN%2BfIMXDrtCybObvsVrjuWPQMbSCTijhsb5w4Yt00TcirbyDhMJ7eu9SNuXYn1FnRBMxacegpC%2FQoeiCI7QH6QiBjiEqU9AxYpOZEo%2BSZHQ98kidv0DB4Q3mOIicGcWdQ44jmvztBZ1LErIA9ImEwJ9BlWnSoc9ZmDmckyBz9J%2BFiwnowHM%2FwFDNdOEnmaOgcxcyaO7q6PDSddkY%2B%2Bnxwc%2F4gWKXBmgqRIbUiYKDzuHhwTvqu8xZCFke4jgkLqWQcAAV0ClUyNGcBoH43%2Fcp8eCvg87BCNM59pADncrG1IWqjtL8dIzJ%2BoiBcYDMg48MqhFNRIEzc8l0dZnrICQMVM2jAIUkhB7zkyvEVS%2BgauRRlyXtPVqdpR5cIz0QF3zLyQPlLAjBMNYp%2BOjofZT039Gv0JUkctZJaS4x0plSbM64P4OinLHwh3hu3hOwfOMnOkUWmnA2z5oTZPgxtvI3K1NYmNLcX84HzEEEzOD1TL5Z5hejgbAPQ4%2BdGYF%2BYI%2BYj9G6qR6aic7jCyicJclyJo5mXCSDJXF02V22TWR1QwKTNoQ8n43kbAfJmQ2YglkeZVKhgjkdj12yTILMEqaWl8liyuyL2qYRF%2BmWsRkZLGtw2sOeB6UeulBROOv2ra5lmhcm%2FDOw%2BuZ5fBEY9L%2FiWiLu5rAtSmNXWAB5DGJ2wyV6W9RdpNtlXCW6jesUZHkvSiPsjdGNi2HIMF%2BgO4cKdASg5oG5UVywL3T7eCpwYPRPzo6P%2BxdnpV1Bru7uPqSdcTI4OR4MLgQZn8vRqBxugUizf4S2tym0lVTUt4YrVQhN4hmxIuQGvY0%2B3f4yRM2NHcy9ZU%2Bubt3D2xXRV12xeP8gOt8RUw8wt%2BR0Yc5%2BFWli5vLxZJhUmmZj92w4end5%2FdWE%2F6yBmRikwIKozBCgEDMpvS8FH%2FET8wB5zie4B4k8kAoUcsfQMlEif11hNPlztgFWUNZQa9OGihqWXcQeXegdQCR1YlPqGMy74cwnPFwUyp6fxRCbk9%2BwG5HgJ6CemB4b1iVGGAaYB91w%2FDiNhxW8KAYKFr0H5vTi%2FhkxGBQ%2FfDPDwQcx6%2BquNwL6iLlGwR%2FjAYkvfD1J1DfYLNGWNwIDIzb3XRKKhkET43YJaqe39W06d4srQx944MOE4AC5Ixhq6fKrgd68vqvR7x%2BMZyDKs2y0GR3VprvWuNWoZg8SCfEgD7esLtaQ%2FpW5G2fa3zGk4cqlRR4VenCxUKGnt%2B9XZXtER%2FsYpnpYgphAoN2bBioUVE57ews%2BvbgFllFDq76CVgPFuZMqKf2XoTbjSNcjt7QL7Jou2FrNoOXxnni8fprSm8cZHVryONP%2BAo%2BltCyP5UKN8jhrF7ugQAW7ShSctCjYEwpyT%2FB68yAvRkso5EUUyFDMkMWDonijjCgYTNOgGNS5UqeKQmdVdDl9kdskv2bcwXE6qemEyraftWTcMxmX7zq%2FDzKuxGhNxpWIUjKuM6jImCn%2BKmRMDWYXKJzWUfBcQcGLKpKcv4iCUnBlBwie1eitbPpFC8E9QTAfAdKbggU1WmKwoKLAQUWOLAhVFTRKwqLV7IKG8zoUWqaChZZVGQt4WdQiG1veAYYXdW8Tq9veBjL2hcNVZFxvDKYqtMRf2voC9jIpWdxlCzSKubU17DTZzVq%2B2Sq%2BqZ6dLdVLeKvy1Zu1cXykpUnDNJHWJumNFFmKllyRJRTgkk%2FOEqZQtFHM5MykijWxa1AJm6aosXEosqVG48G7zBpGvakhS9GSGrIERRRPTpYDebmiDcfyJDPZjRpKB%2BQF1GhD%2FvuihrTWWW9qyFK0pIYsoUCNfHKWGoWijVIjZyavQA2lA1JNjY1XB%2FxTza0NUVqqGKVVGeizNo5Stmxs2qOSPvzQG445LVrSMaeh6FTl0yWvqlC4WbcqZyuVyKkL8tUQoY397z32r%2FlrmZHmoa5RRZBrVBbeGr1eYGu0YUirfubXxvctVYDfqgyTWxuH%2BFtgNAwMxaeiepNDJUhLhKiEFFiizgQzKwpuMA8zOYQ9%2BsShE%2Bq892k4IyJRrrpR4igNqxI9deH0Goa0a232xZDs99h6w0NSoiU1JAUFXORSs85HvmCjMJAtZDcK1K6qsVWrauzKNzX2xqtqWng0%2Fw4j8%2BsReuMjp0VLgOQ0qN5hyOm5dxi5wk2%2Fw5BspRIkdctXBBFqQKL8Ur%2F6m912idu%2BQKL6cRu9caJUpCVUlEoKaCnJlX2ayWZRPtFkKm8UPWrrqvyErPbj%2F2qStMvb9u6SiF%2Bb0g4h25nD9dur2Br6cRTx5aOT2mZcYd%2B0L6ytTXPVFvuir25LMlFywyNEq72wOF1LXsoSyn2wZbLSBVsVfR0PLOn73fhX%2B9sjtiqIbQ8qsdmu79s7Ngu%2FIqgdQ9U8KerSGy5FPeWkUeXNOmZpRqVXprrQ63BJYXuVkKr70L%2BGNu26wL1FuvM%2FS6o3ZIpytGRLUUYx%2FK3IkiVJkq7EiFxtswHyojntxo1%2BJTfa3w3a%2BwoZHZ%2Ft1GtktH3MkRSUr5MpPuTkC77OWpnaR5z6d8y1n0jaqgW3duXyOrtdcLsveKh%2B2VxviCgVaQkTpZICVEpyZR2QNIvSB5ErbxQ8auuqdEPqluvVkKRdqLt3N8T7btwQT3s3xKt0Q7xyN8R7TTfEq33TWkuB2kW7tmrRrl254M5uF%2B3uCx7KjVT0pohakpY4UUspcKUsW9YVyeRROiNS9Y3Sp8TEKjFUt3SvhiftAt59OyPZDZj0xolSkZY0USopdVJyuaT3qmkWJUqkyl%2FFkZGtazeSnANJvsS9fctY%2BCFuYhlYTCM2jvgsJxNpS6B8tLwsAB%2BILZHElk6OkHiZ7Ms1o764atneTYej6IESjqxz8%2Bwo3T4OWvAxsYvV4fBm%2BUeyldGnAFT%2FSj06j%2BYjsb0dXH69wV2%2BbUi6SvcP7w%2FvFxyEyGHzOfMQFvs4ibAYm6DyGFm8%2F1PhDXh8FruuKAtTBI1J4BBPbG0VdKU23bXbn7Xbn7Xbn7369mexkwBjd5fAm%2FB%2F4W2rgVvHHqKJ0qq5768f%2Fw0rPjZfrEGeFGb%2BpaP0m8l%2FI%2FqAAdxhcmZzdz73WHHxD7jq6Q2fPDluBLfTrx8%2FtU8k3%2Bnqjs2bm5oF9Vqz%2BP9ZYggmYgTRfdyxcU%2BWPRAYnc0fFeKnIvDMceTCU1Gu8Ve3Vy%2B5iyx79XPcrdfLrMKbFsd07jMePz%2BvKl5VJm%2BwbpvW%2BbFlH1uD3vr8oyv6c8NioYO9uAho%2FBsU%2BaMa1n0AAA%3D%3D'
          timeout: 30000
      - name: Check for an incorrect response
        if: steps.backendReasonerJob.outputs.response != '{"phylorefs":{"#Alligatoridae":["#phylogeny0_node22"]}}'
        run: echo "::error::Klados reasoner backend failed" && exit 1
      - name: Report success unless errored
        run: echo "::notice::Klados reasoner backend worked correctly"
